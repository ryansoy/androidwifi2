/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.restado.androidwifi2;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

//import android.net.ConnectivityManager;
//import android.net.NetworkInfo;
import android.net.wifi.WifiManager;
import android.content.Context;


@Kroll.module(name="Androidwifi2", id="com.restado.androidwifi2")
public class Androidwifi2Module extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "Androidwifi2Module";
	private static final boolean DBG = TiConfig.LOGD;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public Androidwifi2Module()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	// Methods
	@Kroll.method
	public String example()
	{
		Log.d(LCAT, "example called");
		return "hello world";
	}

	// Properties
	@Kroll.getProperty
	public String getExampleProp()
	{
		Log.d(LCAT, "get example property");
		return "hello world";
	}


	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}
	
	/*
	@Kroll.constant public static final int WIFI_DISABLED = WifiManager.WIFI_STATE_DISABLED;
	@Kroll.constant public static final int WIFI_DISABLING = WifiManager.WIFI_STATE_DISABLING;
	@Kroll.constant public static final int WIFI_ENABLED = WifiManager.WIFI_STATE_ENABLED;
	@Kroll.constant public static final int WIFI_ENABLING = WifiManager.WIFI_STATE_ENABLING;
	@Kroll.constant public static final int WIFI_UNKNOWN = WifiManager.WIFI_STATE_UNKNOWN;
	*/
	
	@Kroll.method
	public String getWifiState() {
		TiApplication context = TiApplication.getInstance();
		//ConnectivityManager connManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
		
		WifiManager wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
		
		int wifi_state = wifiManager.getWifiState(); 
		
		if (wifi_state == WifiManager.WIFI_STATE_DISABLED) {
			return "disabled";
		}
		
		if (wifi_state == WifiManager.WIFI_STATE_DISABLING) {
			return "disabling";
		}
		
		if (wifi_state == WifiManager.WIFI_STATE_ENABLED) {
			return "enabled";
		}
		
		if (wifi_state == WifiManager.WIFI_STATE_ENABLING) {
			return "enabling";
		}
		
		if (wifi_state == WifiManager.WIFI_STATE_UNKNOWN) {
			return "unknown";
		}
		
		else {
			return "we have a problem.";
		}
		/*
		NetworkInfo mWifi = connManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
		
		//NetworkInfo.DetailedState.CONNECTING
		NetworkInfo.DetailedState state = mWifi.getDetailedState(); 
		 
		if (state == NetworkInfo.DetailedState.AUTHENTICATING) {
			return "authenticating";
		}
		
		if (state == NetworkInfo.DetailedState.BLOCKED) {
			return "blocked";
		}
		
		if (state == NetworkInfo.DetailedState.CAPTIVE_PORTAL_CHECK) {
			return "captive portal check";
		}
		
		if (state == NetworkInfo.DetailedState.CONNECTED) {
			return "connected";
		}  
		
		if (state == NetworkInfo.DetailedState.CONNECTING) {
			return "connecting";
		}
		
		if (state == NetworkInfo.DetailedState.DISCONNECTED) {
			return "disconnected";
		}
		
		if (state == NetworkInfo.DetailedState.DISCONNECTING) {
			return "disconnecting";
		}
		
		if (state == NetworkInfo.DetailedState.FAILED) {
			return "failed";
		} 
		
		if (state == NetworkInfo.DetailedState.IDLE) {
			return "idle";
		}
		
		if (state == NetworkInfo.DetailedState.OBTAINING_IPADDR) {
			return "obtaining ipaddr";
		} 
		
		if (state == NetworkInfo.DetailedState.SCANNING) {
			return "scanning";
		}
		
		if (state == NetworkInfo.DetailedState.SUSPENDED) {
			return "suspended";
		}
		
		if (state == NetworkInfo.DetailedState.VERIFYING_POOR_LINK) {
			return "VERIFYING_POOR_LINK";
		}	 
		
		else {
			return "who knows?";
		}
		*/
	}
	
}

ConnectivityManager connManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
NetworkInfo mWifi = connManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
public String getSSID()
	if (mWifi.isConnected()) {
	    // Do whatever
	    TiApplication context = TiApplication.getInstance();
	     //ConnectivityManager connManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);

	    WifiManager wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);	    
	    WifiInfo info = wifiManager.getConnectionInfo ();
	    String ssid  = info.getSSID();
	    return ssid;
	}
	return "Unknow";
}

